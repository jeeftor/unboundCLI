# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# See documentation at https://goreleaser.com
version: 2

env:
  - GO111MODULE=on
  - CGO_ENABLED=0

before:
  hooks:
    - go mod tidy

snapshot:
  version_template: "{{ incpatch .Version }}-next"

gomod:
  proxy: true

report_sizes: true

git:
  ignore_tags:
    - "{{ if not .IsNightly }}nightly{{ end }}"

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

builds:
  - id: unboundCLI
    env:
      - CGO_ENABLED=0
    goos:
      - linux
#      - darwin
#      - windows
    goarch:
      - amd64
#      - arm64
    ignore:
      - goos: windows
        goarch: arm
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser

universal_binaries:
  - replace: true
    name_template: "{{ .ProjectName }}"

archives:
  - id: unboundCLI
    formats: ["tar.gz"]
    format_overrides:
      - goos: windows
        formats: ["zip"]
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - LICENSE
#      - CHANGELOG.md
#      - docs/*

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256


#
# Using cosign for signing


signs:
  - id: cosign-checksums
    cmd: cosign
    signature: "${artifact}.sig"
    certificate: "${artifact}.pem"
    args:
      - "sign-blob"
      - "--yes"
      - "--oidc-issuer=https://token.actions.githubusercontent.com"
      - "--output-signature=${signature}"
      - "--output-certificate=${certificate}"
      - "${artifact}"
    artifacts: checksum
    output: true
  - id: cosign-sboms
    cmd: cosign
    signature: "${artifact}.sig"
    certificate: "${artifact}.pem"
    args:
      - "sign-blob"
      - "--yes"
      - "--oidc-issuer=https://token.actions.githubusercontent.com"
      - "--output-signature=${signature}"
      - "--output-certificate=${certificate}"
      - "${artifact}"
    artifacts: sbom
    output: true
#dockers:
#  - image_templates:
#      - "ghcr.io/jeeftor/unboundcli:{{ .Version }}"
#      - "ghcr.io/jeeftor/unboundcli:latest"
#    dockerfile: Dockerfile
#    build_flag_templates:
#      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
#      - "--label=org.opencontainers.image.description=CLI for syncing with UNBOUND DNS on OPNSENSE router"
#      - "--label=org.opencontainers.image.url=https://github.com/jeeftor/unboundCLI"
#      - "--label=org.opencontainers.image.source=https://github.com/jeeftor/unboundCLI"
#      - "--label=org.opencontainers.image.version={{ .Version }}"
#      - "--label=org.opencontainers.image.created={{ time \"2006-01-02T15:04:05Z07:00\" }}"
#      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
#      - "--label=org.opencontainers.image.licenses=MIT"

nfpms:
  - id: unboundCLI
    package_name: unboundcli
    vendor: jeeftor
    homepage: https://github.com/jeeftor/unboundCLI
    maintainer: Jeef <jeeftor@github.com>
    description: CLI for syncing with UNBOUND DNS on OPNSENSE router
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/unboundcli/LICENSE
      - src: ./README.md
        dst: /usr/share/doc/unboundcli/README.md


    #      - src: ./completion/bash/unboundCLI
    #        dst: /usr/share/bash-completion/completions/unboundcli
    #        file_info:
    #          mode: 0644
    #      - src: ./completion/zsh/unboundCLI
    #        dst: /usr/share/zsh/vendor-completions/_unboundcli
    #        file_info:
    #          mode: 0644
    recommends:
      - git

#brews:
#  - name: unboundcli
#    repository:
#      owner: jeeftor
#      name: homebrew-tap
#
#
#    homepage: "https://github.com/jeeftor/unboundCLI"
#    description: "CLI for syncing with UNBOUND DNS on OPNSENSE router"
#    license: "MIT"
#    install: |
#      bin.install "unboundCLI"
#      bash_completion.install "completions/bash/unboundCLI" => "unboundcli"
#      zsh_completion.install "completions/zsh/unboundCLI" => "_unboundcli"
#    test: |
#      system "#{bin}/unboundCLI", "--version"
#    commit_author:
#      name: goreleaserbot
#      email: bot@goreleaser.com

sboms:
  - artifacts: binary
    documents:
      - "{{ .ProjectName }}_{{ .Version }}_{{ title .Os }}_{{ if eq .Arch \"amd64\" }}x86_64{{ else if eq .Arch \"386\" }}i386{{ else }}{{ .Arch }}{{ end }}_sbom.spdx.json"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^test:"
      - "^tests:"
      - "^ci:"
      - "^chore:"
      - "Merge pull request"
      - "Merge branch"
      - "go mod tidy"
  groups:
    - title: "New Features"
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: "Bug fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: "Documentation updates"
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 2
    - title: "Other changes"
      order: 999

release:
  github:
    owner: jeeftor
    name: unboundCLI
  draft: false
  prerelease: auto
  mode: replace
  header: |
    ## unboundCLI {{ .Tag }} ({{ .Date }})

    Welcome to this new release of unboundCLI!

    This release includes SLSA Level 3 provenance for enhanced supply chain security.
  footer: |
    ## Installation

    ### Homebrew
    ```bash
    brew install jeeftor/tap/unboundcli
    ```
